---
interface Props {
  id: string;
  title: string;
  description: string;
  platform: string;
  price: string;
  previewImageUrl: string;
  tags: string[];
  featured?: boolean;
}

const { id, title, description, platform, price, previewImageUrl, tags, featured = false } = Astro.props;
---

<a href={`/listing/${id}`} class="group">
  <div class={`overflow-hidden rounded-lg shadow-md hover:shadow-lg transition-shadow duration-300 ${featured ? 'ring-2 ring-indigo-500' : ''}`}>
    <div class="relative">
      <img 
        src={previewImageUrl} 
        alt={title}
        class="h-48 w-full object-cover"
        onerror="this.src='/images/placeholder.jpg'; this.onerror=null;"
      />
      {featured && (
        <span class="absolute top-2 right-2 bg-indigo-600 text-white text-xs font-semibold px-2 py-1 rounded-full">
          Featured
        </span>
      )}
      <div class="absolute bottom-0 left-0 right-0 bg-gradient-to-t from-black/70 to-transparent p-4">
        <span class="text-white font-medium">{price}</span>
      </div>
    </div>
    <div class="p-4">
      <div class="flex items-center justify-between">
        <span class="inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium bg-blue-100 text-blue-800">
          {platform}
        </span>
        <div class="text-sm text-gray-500">
          {tags.slice(0, 2).map((tag) => (
            <span class="inline-block mx-1">#{tag}</span>
          ))}
        </div>
      </div>
      <h3 class="mt-2 text-lg font-medium text-gray-900 group-hover:text-indigo-600 transition-colors duration-300">{title}</h3>
      <p class="mt-1 text-sm text-gray-500 line-clamp-2">{description}</p>
    </div>
  </div>
</a>